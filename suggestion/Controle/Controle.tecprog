Pacote: controle.servlet

/controle.servlet / CarregarParseCampanha.java

public class CarregarParseCampanha extends HttpServlet
Comentário: Servlet to control the loading parse campaign
Sugestão: LoadCampaignParse

PrintWriter saida = response.getWriter();
Sugestão: PrintWriter output = response.getWriter

FileItem arquivo = null;
Sugestão: FileItem file = null;

int linhaInicial = 1;
Sugestão: int initialLine = 1;

String tipoArquivo = "campanha";
Sugestão: String fileType = "campaign";

String divisao = ";";
Sugestão: String division = ";";

----------------------------------------------------------------------------------------------------

/contole.servlet / CarregarParseMovimentacoes.java

public class CarregarParseMovimentacoes extends HttpServlet
Comentário: Servlet to control the loading parse financial transactions
Sugestão: LoadTransactionsParse

PrintWriter saida = response.getWriter();
Sugestão: PrintWriter output = response.getWriter();

FileItem arquivo = null;
Sugestão: FileItem file = null; 

String tipoArquivo = "";
Sugestão: String fileType = "";

String ano = "";
Sugestão: String electionYear = "";

String divisao = ";";
Sugestão: String division = ";";

int linhaInicial = 1;
Sugestão: int initialLine = 1;

----------------------------------------------------------------------------------------------------

/ controle.servlet / CarregarParsePartido.java

public class CarregarParsePartido extends HttpServlet
Comentário: Servlet to control the loading parse political parties
Sugestão: LoadPoliticalPartiesParse

PrintWriter saida = response.getWriter();
Sugestão: PrintWriter output = response.getWriter();

FileItem arquivo = null;
Sugestão: FileItem file = null;

int linhaInicial = 1;
Sugestão: int InitialLine = 1;

String tipoArquivo = "partido";
Sugestão: String fileType = "political parties";

String divisao = ";";
Sugestão: String division = ";";

----------------------------------------------------------------------------------------------------

/ controle.servlet / Logica.java

public interface Logica 
Comentário: Interface to implement the logic of dynamic display of indices of pages
Sugestão: Logic

String executa(HttpServletRequest req,
            HttpServletResponse res) throws Exception
Comentário: Method signatures to implement the logic of dynamic display of indices of pages
Sugestão: String execute (HttpServletRequest req,
            HttpServletResponse res) throws Exception
            
----------------------------------------------------------------------------------------------------

/ controle.servlet / RequisitarMovimentacoesDeCandidato.java

public class RequisitarMovimentacoesDeCandidato implements Logica
Comentário: Servlet requests to control display search result list of financial transactions a candidate
Sugestão: public class RequestFinancialTransactionsOfCandidate implements Logic

private CampanhaControle campanhaControle;
Sugestão: private ControlCampaign controlCampaign

private Campanha campanhaBusca;
Sugestão: private Campaign searchCampaign

private Campanha campanha;
Sugestão: private Campaign campaign 

private MovimentacaoControle movimentacaoControle;
Sugestão: TransactionsControl transactionsControl

private String despesaTot;
Sugestão: private String totalExpense

private float despesaTC;
Sugestão: private float totalExpenseCalculatedValue

private float receitaTC;
Sugestão: private float totalRevenueCalculatedValue

private List<Receita> listaReceita;
Sugestão: private List<Revenue> revenueList

private List<Despesa> listaDespesa;
Sugestão: private List<Expense> expenseList

private HttpServletRequest req;
Sugestão: private HttpServletRequest request

private int inicioR;
Sugestão: 

private int inicioD;
Sugestão:

private int qtdPorPaginaR;
Sugestão:

private int qtdPorPaginaD;
Sugestão: private int 

private boolean verTodosR;
Sugestão: private boolean seeAllRevenues

private boolean verTodosD;
Sugestão: private boolean seeAllExpenses

private int indiceR;
Sugestão: private int revenueIndex

private int indiceD;
Sugestão: private int expenseIndex

private int qtdDePPR;
Sugestão: ???

private int qtdDePPD;
Sugestão: ???

private int centroR;
Sugestão: ???

private int minRaioR;
Sugestão: ???

private int maxRaioR;
Sugestão: ???

private int centroD;
Sugestão: ???

private int minRaioD;
Sugestão: ???

private int maxRaioD;
Sugestão: ???

private void recebeParametros() throws SQLException 
Comentário: Receive methods for the parameters of the request
Sugestao: private void receiveParameters

private void estabeleceParametros() throws Exception 
Comentário: Establishes what each parameter will receive
Sugestão: private void setParameters

private void preparaEnvioDeParametros()
Comentário: Prepare responses of forwarded requests
Sugestão: private void prepareParametersTransmission

private int geraIndiceDaListaR(List<Receita> lista, int divisor)
Comentário:Generate indexes for list of receipt
Sugestão: private int generateIndexListOfRevenue(List<Revenue> list, int divider)

int indice
Sugestão: int index

private int geraIndiceDePaginacaoR(List<Receita> lista)
Comentário: Generate index list for paging of receipt
Sugestão: private int generateIndexPageOfRevenue(List<Revenue> list)

private int geraIndiceDaListaD(List<Despesa> lista, int divisor)
Comentário: Generate indexes for list of expenses
Sugestão: private int generateIndexListOfExpense(List<Expense> list, int divider)

private int geraIndiceDePaginacaoD(List<Despesa> lista)
Comentário: Generate index list for paging of expenses
Sugestão: private generateIndexPageOfExpense(List<Expense> list)

240 -private void estabeleceRaioDePaginacaoR()
Comentário: Logic for implementing paging of receipt
Sugestão: private void setPageRadiusRevenue

241 - int cont = 0;
Sugestão: int counter VERISSOAQUI

private void estabeleceRaioDePaginacaoD()
Comentário: Logic for implementing paging of expenses
Sugestão: private void setPageRadiusExpense

private String formataDespesa(Float despesa) 
Comentário: Logic to implement the format of expenses
Sugestão: private String formatOfExpenses

private Campanha constroiCampanha(HttpServletRequest req)
Comentário: Set a political campaign according to the parameters requested by an Http request  
Sugestão: private Campaign buildCampaign(HttpServletRequest request)

int numero
Sugestão: int candidateNumber

int cargo_cod
Sugestão: int codeOfPosition

String uf
Sugestão: String fedetativeUnit

----------------------------------------------------------------------------------------------------

/ controle.servlet / RequisitarPartido.java

public class RequisitarPartido implements Logica
Comentário: Servlet to request control of political parties
Sugestão: public class RequestPoliticalParty implements Logic

private PartidoControle controle;
Sugestão: private PolicalPartyControl control

private List<Partido> listaPartidos;
Sugestão: private List<PoliticalParty> politicalPartyList

private HttpServletRequest req;
Sugestão: private HttpServletRequest request

private int inicio;
Sugestão: private int ?????

private int qtdPorPagina;
Sugestão: private int ???

private boolean verTodos;
Sugestão: private boolean seeAllPoliticalParties;

private int atual;
Sugestão: private int currentPoliticalParty

private int indice;
Sugestão: private int index

private int qtdDePP;
Sugestão: private int ????

private void recebeParametrosDeListagem()
Comentário: Receive methods for the parameters of the request
Sugestão: private void receiveListParameters

private void estabeleceParametros() throws SQLException
Comentário: Establishes what each parameter will receive
Sugestão: private void setParameters

private void preparaEnvioDeParametros()
Comentário: Prepare responses of forwarded requests
Sugestão: private void prepareParametersTransmission

private int geraIndiceDaLista(List<Partido> lista, int divisor)
Comentário: Generate indexes for list of candidates
Sugestão: private int generateListIndex(List<PoliticalParty> list, int divider)

private int geraIndiceDePaginacao(List<Partido> lista) 
Comentário: Generate index list for paging
Sugestão: private int generatePageIndex(List<PoliticalParty> list)

----------------------------------------------------------------------------------------------------

/ controle.servlet / SelecionarCandidato.java

public class SelecionarCandidato implements Logica 
Comentário: Servlet requests to control the selection of political candidates
Sugestão: public class SelectCandidate implements Logic

private CandidatoControle candidatoControle;
Sugestão: ControlCandidate controlCandidate

private Candidato candidato;
Sugestão: ControlCandidate candidate

private List<Campanha> listaCampanha;
Sugestão: private List<Campaign> campaignList

private String tituloEleitoral;
Sugestão: private String electoralTitle
	
private MovimentacaoControle movimentacaoControle;
Sugestão: controlTransactions controlTransactions

private List<Receita> listaReceita;
Sugestão: private List<Revenue> revenueList

private List<Despesa> listaDespesa;	
Sugestão: private List<Expense> expenseList

private float despesaMax2002;
Sugestão: private float maximumExpenseIn2002

private float despesaMax2006;
Sugestão: private float maximumExpenseIn2006

private float despesaMax2010;
Sugestão: private float maximumExpenseIn2010
	
private float despesaCalc2002;
Sugestão: private float expenseCalculatedValueIn2002

private float receitaCalc2002;
Sugestão: private float revenueCalculatedValueIn2002
	
private float despesaCalc2006;
Sugestão: private float expenseCalculatedValueIn2006

private float receitaCalc2006;
Sugestão: private float revenueCalculatedValueIn2006

private float despesaCalc2010;
Sugestão: private float expenseCalculatedValueIn2010

private float receitaCalc2010;
Sugestão: private float revenueCalculatedValueIn2010

----------------------------------------------------------------------------------------------------

/ controle.servlet / SelecionarPartido.java

public class SelecionarPartido implements Logica
Comentário: Servlet requests to control the selection of political parties
Sugestão: public class SelectPoliticalParty implements Logic

private final int[] ANOS = {2010, 2006, 2002};
Sugestão: private final int [] ELECTIONYEARS = {2010, 2006, 2002}

private PartidoControle partidoControle;
Sugestão: private controlPoliticalParty controlPoliticalParty

private Partido partido;
Sugestão: private PoliticalParty politicalParty

private String sigla;
Sugestão: private String originalPartyAcronym

private String siglaComUnder;
Sugestão: partyAcronymWithUnderlineInsteadOfWhitespace

private String linkTSE;
Sugestão: partyAcronymToBeUsedToMakeTSELink

private String trocaDeCaracteresEspeciais(Partido partido)
Comentário: Method for exchanging special characters emanating from the database
Sugestão: private String changeSpecialCharacters(PoliticalParty politicalParty)

----------------------------------------------------------------------------------------------------

/ controle.servlet / ServletControle.java

public class ServletControle extends HttpServlet
Comentário: Controller servlet instance
Sugestão: public class ControlServlet extends HttpServlet

String parametro
Sugestão: String parameter

String nomeDaClasse
Sugestão: nameOfClass

Class<?> classe = Class.forName(nomeDaClasse);
Sugestão: Class<?> class = Class.forName(nameOfClass)

Logica logica = (Logica) classe.newInstance();
Sugestão: Logic logic = (Logic) class.newInstance();

String pagina
Sugestão: String page

----------------------------------------------------------------------------------------------------

/ controle.servlet / VisualizarCandidatosPartido.java

public class VisualizarCandidatosPartido implements Logica
Comentário: Servlet request to control display political candidate
Sugestão: public class VisualizeCandidateOfPoliticalParty implements Logic

private ArrayList<Campanha> listaCampanhas;
Sugestão: private ArrayList<Campaign> campaignList 

private void recebeParametros() 
Comentário: Receive methods for the parameters of the request
Sugestão: private void receiveParameters

private void estabeleceParametros() throws SQLException 
Comentário: Establishes what each parameter will receive
Sugestão: private void setParameters

private void preparaEnvioDeParametros() 
Comentário: Prepare responses of forwarded requests
Sugestão: private void prepareParametersTransmission

private int geraIndiceDaLista(List<Campanha> lista, int divisor) 
Comentário: Generate indexes for list of candidates
Sugestão: ṕrivate int generateCandidateListIndexes

private int geraIndiceDePaginacao(List<Campanha> lista) 
Comentário: Generate index list for paging
Sugestão: private int generatePageIndex(List<Campaign> list)

private String sigla;
Sugestão: private String partyAcronym

private String ano;
Sugestão: private String electionYear

private HttpServletRequest req;
Sugestão: private HttpServletRequest request

private int inicio;
Sugestão: 

private int qtdPorPagina;
Sugestão: 

private boolean verTodos;
Sugestão: private boolean seeAllPoliticalParties

private int atual;
Sugestão: 

----------------------------------------------------------------------------------------------------

/ controle.servlet / VisualizarResultadoListaBuscaCandidato.java

public class VisualizarResultadoListaBuscaCandidato implements Logica
Comentário: Servlet requests to control display search result list of candidates
Sugestão: public class VisualizeResultOfSearchCandidateList implements Logic

private CandidatoControle controle;
Sugestão: private ControlCandidate control

private List<Candidato> listaCandidatos;
Sugestão: private List<Candidate> candidateList

private String nome;
Sugestão: private String candidateName ????

private HttpServletRequest req;
Sugestão: private HttpServletRequest request

private int inicio;
Sugestão: ???

private int qtdPorPagina;
Sugestão: ???

private boolean verTodos;
Sugestão: private boolean seeAllCandidates

private int indice;
Sugestão: ???

private int qtdDePP;
Sugestão: ???

private int centro;
Sugestão: ???

private int minRaio;
Sugestão: ???

private int maxRaio;
Sugestão: 

private void recebeParametros() throws SQLException
Comentário: Receive methods for the parameters of the request
Sugestão: private void receiveParameters() throws SQLException

private void estabeleceParametros()
Comentário: Establishes what each parameter will receive
Sugestão: private void setParameters()

private void preparaEnvioDeParametros() 
Comentário: Prepare responses of forwarded requests
Sugestão: private void prepareParametersTransmission

private int geraIndiceDaLista(List<Candidato> lista, int divisor)
Comentário: Generate indexes for list of candidates
Sugestão: private int generateListIndex(List<Candidate> list, int divider)

private int geraIndiceDePaginacao(List<Candidato> lista)
Comentário: Generate index list for paging
Sugestão: private int generatePageIndex(List<Candidate> list)

private void estabeleceRaioDePaginacao()
Comentário: Logic for implementing paging
Sugestão: private void setRadiusPageCandidate

----------------------------------------------------------------------------------------------------

/ controle.servlet / VisualizarTopFive.java

public class VisualizarTopFive implements Logica
Comentário: Servlet requests to control display TOP Five
Sugestão: public class VisualizeTopFive implements Logic

private CampanhaControle campanhaControle;
Sugestão: private ControlCampaign controlCampaign
	
private ArrayList<Campanha> listaCampanha;
Sugestão: private ArrayList<Campaign> campaignList
	
private String cargo;
Sugestão: private String position

private Integer ano;
Sugestão: private Integer electionYear	

HttpServletRequest req;
Sugestão: HttpServletRequest request

private void recebeParametros()
Comentário: Receive methods for the parameters of the request
Sugestão: private void receiveParameters()

private void estabeleceParametros() throws SQLException
Comentário: Establishes what each parameter will receive
Sugestão: private void setParameters() throws SQLException

private void preparaEnvioDeParametros()
Comentário: Prepare responses of forwarded requests
Sugestão: private void prepareParametersTransmission()



